Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table =    10,000
ii. Business table =    10,000
iii. Category table =   10,000
iv. Checkin table =     10,000
v. elite_years table =  10,000
vi. friend table =      10,000
vii. hours table =      10,000
viii. photo table =     10,000
ix. review table =      10,000
x. tip table =          10,000
xi. user table =        10,000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business =        10,000 (by id primary key)
ii. Hours =           1,562 (by business_id foreign Key) 
iii. Category =       2,643 (by business_id foreign Key)  
iv. Attribute =       1,115 (by business_id foreign Key) 
v. Review =          10,000 (by id primary key)
vi. Checkin =           493 (by business_id foreign Key) 
vii. Photo =         10,000 (by id primary key)
viii. Tip =             537 (by user_id foreign Key)   
ix. User =           10,000 (by id primary key)
x. Friend =              11 (by user_id foreign Key)   
xi. Elite_years =     2,780 (by user_id foreign Key) 

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:

	SELECT 
		COUNT(*) 
        FROM 
		User
	
	WHERE 
		id is NULL OR
		name is NULL OR
		review_count IS NULL OR
		yelping_since IS NULL OR
		useful IS NULL OR 
		funny IS NULL OR 
		cool IS NULL OR 
		fans IS NULL OR 
		average_stars IS NULL OR 
		compliment_hot IS NULL OR 
		compliment_more IS NULL OR 
		compliment_profile IS NULL OR 
		compliment_cute IS NULL OR 
		compliment_list IS NULL OR 
		compliment_note IS NULL OR 
		compliment_plain IS NULL OR 
		compliment_cool IS NULL OR 
		compliment_funny IS NULL OR 
		compliment_writer IS NULL OR 
		compliment_photos IS NULL
	
Output
+----------+
| COUNT(*) |
+----------+
|        0 |
+----------+


	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.702
		
	
	ii. Table: Business, Column: Stars
	
		min:   1	max:	5	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2,000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
	SELECT
	city
	,SUM(review_count) as number_of_reviews
	
	FROM business

	GROUP by city
	ORDER BY number_of_reviews DESC;


	Copy and Paste the Result Below:
	

+-----------------+-------------------+
| city            | number_of_reviews |
+-----------------+-------------------+
| Las Vegas       |             82854 |
| Phoenix         |             34503 |
| Toronto         |             24113 |
| Scottsdale      |             20614 |
| Charlotte       |             12523 |
| Henderson       |             10871 |
| Tempe           |             10504 |
| Pittsburgh      |              9798 |
| Montréal        |              9448 |
| Chandler        |              8112 |
| Mesa            |              6875 |
| Gilbert         |              6380 |
| Cleveland       |              5593 |
| Madison         |              5265 |
| Glendale        |              4406 |
| Mississauga     |              3814 |
| Edinburgh       |              2792 |
| Peoria          |              2624 |
| North Las Vegas |              2438 |
| Markham         |              2352 |
| Champaign       |              2029 |
| Stuttgart       |              1849 |
| Surprise        |              1520 |
| Lakewood        |              1465 |
| Goodyear        |              1155 |
+-----------------+-------------------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT
stars as star_rating
,COUNT(stars) as count

FROM business

WHERE city='Avon'
GROUP BY star_rating


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------------+-------+
| star_rating | count |
+-------------+-------+
|         1.5 |     1 |
|         2.5 |     2 |
|         3.5 |     3 |
|         4.0 |     2 |
|         4.5 |     1 |
|         5.0 |     1 |
+-------------+-------+


ii. Beachwood

SQL code used to arrive at answer:

SELECT
stars as star_rating
,COUNT(stars) as count

FROM business

WHERE city='Beachwood'
GROUP BY star_rating


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
	
+-------------+-------+
| star_rating | count |
+-------------+-------+
|         2.0 |     1 |
|         2.5 |     1 |
|         3.0 |     2 |
|         3.5 |     2 |
|         4.0 |     1 |
|         4.5 |     2 |
|         5.0 |     5 |
+-------------+-------+	


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
	SELECT
		id
		,review_count
	
	FROM user
	
    	ORDER BY review_count DESC
    	LIMIT 3;

	
		
	Copy and Paste the Result Below:
		
+------------------------+--------------+
| id                     | review_count |
+------------------------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw |         2000 |
| -3s52C4zL_DHRK0ULG6qtg |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg |         1339 |
+------------------------+--------------+



8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
Yes. Even though it is not a 100% correlation (as not always having more reviews translates in more fans), we can observe that the users with most fans have always at least 300 reviews

+------------------------+--------------+------+
| id                     | review_count | fans |
+------------------------+--------------+------+
| -9I98YbNQnLdAmcYfb324Q |          609 |  503 |
| -8EnCioUmDygAbsYZmTeRQ |          968 |  497 |
| --2vR0DIsmQ6WfcSzKWigw |         1153 |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw |         2000 |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ |          930 |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw |          813 |  159 |
| -9bbDysuiWeo2VShFJJtcw |          377 |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ |         1215 |  126 |
| -9da1xk7zgnnfO1uTVYGkA |          862 |  124 |
| -lh59ko3dxChBSZ9U7LfUw |          834 |  120 |
| -B-QEUESGWHPE_889WJaeg |          861 |  115 |
| -DmqnhW4Omr3YhmnigaqHg |          408 |  111 |
| -cv9PPT7IHux7XUc9dOpkg |          255 |  105 |
| -DFCC64NXgqrxlO8aLU5rg |         1039 |  104 |
| -IgKkE8JvYNWeGu8ze4P8Q |          694 |  101 |
| -K2Tcgh2EKX6e6HqqIrBIQ |         1246 |  101 |
| -4viTt9UC44lWCFJwleMNQ |          307 |   96 |
| -3i9bhfvrM3F1wsC9XIB8g |          584 |   89 |
| -kLVfaJytOJY2-QdQoCcNQ |          842 |   85 |
| -ePh4Prox7ZXnEBNGKyUEA |          220 |   84 |
| -4BEUkLvHQntN6qPfKJP2w |          408 |   81 |
| -C-l8EHSLXtZZVfUAUhsPA |          178 |   80 |
| -dw8f7FLaUmWR7bfJ_Yf0w |          754 |   78 |
| -8lbUNlXVSoXqaRRiHiSNg |         1339 |   76 |
| -0zEEaDFIjABtPQni0XlHA |          161 |   73 |
+------------------------+--------------+------+

Also the users with no fans do not have a large number of reviews: 

+------------------------+--------------+------+
| id                     | review_count | fans |
+------------------------+--------------+------+
| ---94vtJ_5o_nikEs6hUjg |            2 |    0 |
| ---cu1hq55BP9DWVXXKHZg |           57 |    0 |
| ---fhiwiwBYrvqhpXgcWDQ |            8 |    0 |
| ---PLwSf5gKdIoVnyRHgBA |            2 |    0 |
| --0RtXvcOIE4XbErYca6Rw |            2 |    0 |
| --0sXNBv6IizZXuV-nl0Aw |            1 |    0 |
| --0WZ5gklOfbUIodJuKfaQ |            7 |    0 |
| --104qdWvE99vaoIsj9ZJQ |            3 |    0 |
| --1av6NdbEbMiuBr7Aup9A |            9 |    0 |
| --1mPJZdSY9KluaBYAGboQ |            5 |    0 |
| --26jc8nCJBy4-7r3ZtmiQ |            2 |    0 |
| --2bpE5vyR-2hAP7sZZ4lA |           23 |    0 |
| --2HUmLkcNHZp0xw6AMBPg |           28 |    0 |
| --3B8LdT1NCD-bPkwS5-5g |            4 |    0 |
| --3oMd6gjXpAzhjLBrsVCQ |            2 |    0 |
| --44NNdtngXMzsxyN7ju6Q |            2 |    0 |
| --4rAAfZnEIAKJE80aIiYg |           25 |    0 |
| --4ww39MLTS1SBRmCrSmww |            3 |    0 |
| --56y1InAvNoQOD6YYrhVQ |            3 |    0 |
| --5BsHjOVLIGoTwjol-V2w |            1 |    0 |
| --5ihAtBE4kI5Gch9383qA |           11 |    0 |
| --5ox2OhSAADcB_uAEOYFw |            2 |    0 |
| --5XzJ2pRsVVJiJUfzZlgQ |            7 |    0 |
| --6D_IuxyKTN53pHi904ag |            2 |    0 |
| --6kLBBsm0GPM9vIB2YBDw |            3 |    0 |
+------------------------+--------------+------+


	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: love

	
	SQL code used to arrive at answer:
    SELECT
        SUM(CASE WHEN r.text LIKE '%love%' THEN 1 ELSE 0 END) as love_count
        ,SUM(CASE WHEN r.text LIKE '%hate%' THEN 1 ELSE 0 END) as hate_count 
   FROM review r

+------------+------------+
| love_count | hate_count |
+------------+------------+
|       1780 |        232 |
+------------+------------+
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
SELECT
	id
	,fans
	
FROM user
	
ORDER BY fans DESC
LIMIT 10;
	
	Copy and Paste the Result Below:

+------------------------+------+
| id                     | fans |
+------------------------+------+
| -9I98YbNQnLdAmcYfb324Q |  503 |
| -8EnCioUmDygAbsYZmTeRQ |  497 |
| --2vR0DIsmQ6WfcSzKWigw |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw |  159 |
| -9bbDysuiWeo2VShFJJtcw |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ |  126 |
| -9da1xk7zgnnfO1uTVYGkA |  124 |
| -lh59ko3dxChBSZ9U7LfUw |  120 |
+------------------------+------+
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
City: Toronto    Category: Restaurants

i. Do the two groups you chose to analyze have a different distribution of hours?


Yes, the Restaurants in Toronto with 4-5 stars seem to be opended for less hours than the ones rated with 2-3 stars


ii. Do the two groups you chose to analyze have a different number of reviews?
         
         
Yes they have different number of reviews per Restaurant but there is not any evident correlation between the number of stars and the number of reviews.


iii. Are you able to infer anything from the location data provided between these two groups? Explain.


Restaurants in the same neighborhood seem to have similar number of reviews per restaurant and stars


SQL code used for analysis:

SELECT
    c.category
    ,b.city
    ,b.stars
    ,b.neighborhood		
    ,TRIM(SUBSTR(h.hours,-11),'y|') as hours_time -- for trimming the last letter of the day (y) + the separator |
    ,COUNT(b.id) as number_of_restaurants
    ,SUM(b.review_count) as number_of_reviews
    ,SUM(b.review_count)/COUNT(b.id) AS reviews_per_restaurant
    	
FROM category c

    INNER JOIN business b ON b.id=c.business_id
        INNER JOIN hours h ON h.business_id=b.id

WHERE c.category='Restaurants' AND b.city='Toronto'

GROUP BY b.stars, hours_time, b.neighborhood
	
+-------------+---------+-------+------------------------+-------------+-----------------------+-------------------+------------------------+
| category    | city    | stars | neighborhood           | hours_time  | number_of_restaurants | number_of_reviews | reviews_per_restaurant |
+-------------+---------+-------+------------------------+-------------+-----------------------+-------------------+------------------------+
| Restaurants | Toronto |   2.0 | Downtown Core          | 11:00-23:00 |                     7 |                35 |                      5 |
| Restaurants | Toronto |   3.0 | Entertainment District | 10:00-23:00 |                     1 |                34 |                     34 |
| Restaurants | Toronto |   3.0 | Entertainment District | 10:00-4:00  |                     1 |                34 |                     34 |
| Restaurants | Toronto |   3.0 | Downtown Core          | 10:30-21:00 |                     6 |               282 |                     47 |
| Restaurants | Toronto |   3.0 | Downtown Core          | 11:00-19:00 |                     1 |                47 |                     47 |
| Restaurants | Toronto |   3.0 | Entertainment District | 9:00-23:00  |                     4 |               136 |                     34 |
| Restaurants | Toronto |   3.0 | Entertainment District | 9:00-4:00   |                     1 |                34 |                     34 |
| Restaurants | Toronto |   4.0 | Niagara                | 12:00-16:00 |                     1 |                89 |                     89 |
| Restaurants | Toronto |   4.0 | Niagara                | 18:00-23:00 |                     4 |               356 |                     89 |
| Restaurants | Toronto |   4.5 | Etobicoke              | 11:00-23:00 |                     6 |                48 |                      8 |
| Restaurants | Toronto |   4.5 | Etobicoke              | 14:00-23:00 |                     1 |                 8 |                      8 |
| Restaurants | Toronto |   4.5 | High Park              | 16:00-2:00  |                     3 |                78 |                     26 |
| Restaurants | Toronto |   4.5 | High Park              | 18:00-2:00  |                     4 |               104 |                     26 |
+-------------+---------+-------+------------------------+-------------+-----------------------+-------------------+------------------------+

	
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: The ones opened have on average higher number of reviews per business
         
         
ii. Difference 2: The businessess that are opened have a higher rating
         
         
         
SQL code used for analysis:

SELECT 
     b.stars
    ,b.is_open
    ,COUNT(b.id) as number_of_bussineses
    ,SUM(b.review_count) as number_of_reviews
    ,SUM(b.review_count)/COUNT(b.id) AS reviews_per_business
    	
FROM category c

    INNER JOIN business b ON b.id=c.business_id

GROUP BY b.is_open, b.stars

+-------+---------+----------------------+-------------------+----------------------+
| stars | is_open | number_of_bussineses | number_of_reviews | reviews_per_business |
+-------+---------+----------------------+-------------------+----------------------+
|   1.5 |       0 |                    4 |                36 |                    9 |
|   2.0 |       0 |                   19 |                89 |                    4 |
|   2.5 |       0 |                    2 |                 6 |                    3 |
|   3.0 |       0 |                   13 |               809 |                   62 |
|   3.5 |       0 |                   13 |               215 |                   16 |
|   4.0 |       0 |                   34 |              3040 |                   89 |
|   4.5 |       0 |                   15 |               231 |                   15 |
|   5.0 |       0 |                   22 |                77 |                    3 |
|   1.0 |       1 |                    4 |                18 |                    4 |
|   1.5 |       1 |                    6 |                28 |                    4 |
|   2.0 |       1 |                   16 |                74 |                    4 |
|   2.5 |       1 |                   22 |               307 |                   13 |
|   3.0 |       1 |                   63 |              1902 |                   30 |
|   3.5 |       1 |                  121 |              2789 |                   23 |
|   4.0 |       1 |                  133 |             12770 |                   96 |
|   4.5 |       1 |                  102 |             11878 |                  116 |
|   5.0 |       1 |                  107 |              2761 |                   25 |
+-------+---------+----------------------+-------------------+----------------------+



3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

Check if there is a correlation between the number of photos a business has and its rating in stars.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
        
        For this I need the number of stars for grouping the data by this parameter, also the number of photos and the count of businesses for each number of stars.

        After checking the data we can see that for higher number of stars (3.5 / 4.5 / 5) the proportion of pictures for each business is higher than in lower number of stars
                   
                  
iii. Output of your finished dataset:

+-------+------------------+-------------------------------+
| stars | number_of_photos | COUNT(DISTINCT p.business_id) |
+-------+------------------+-------------------------------+
|   5.0 |               14 |                             8 |
|   4.5 |              131 |                            70 |
|   3.5 |              150 |                            99 |
|   3.0 |               82 |                            68 |
|   2.5 |               32 |                            28 |
|   1.0 |                3 |                             3 |
+-------+------------------+-------------------------------+


         
iv. Provide the SQL code you used to create your final dataset:

SELECT 
    stars
    ,COUNT(p.id) as number_of_photos
    ,COUNT(DISTINCT p.business_id)
      	
FROM photo p
        LEFT JOIN business b ON b.id = p.business_id

GROUP BY b.stars

HAVING b.is_open=1 
ORDER BY b.stars DESC